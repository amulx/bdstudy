### 图片压缩配置
location ~ .*\.(jpg|gif|png)$ {
	gzip on;
	gzip_http_version 2;
	gzip_comp_level 2;
	gzip_types text/plain application/javascript application/x-javascript text/javascript image/png image/gif;
	root /opt/app/code/images;
}

location ~ .*\.(txt|xml)$ {
	expires 24h;
	gzip on;
	gzip_http_version 2;
	gzip_comp_level 2;
	gzip_types text/plain application/javascript application/x-javascript text/javascript image/png image/gif;
	root /opt/app/code/doc;
}
# 先对文件进行压缩：gzip ./test.img
location ~ ^/download {
	gzip_static on;
	tcp_nopush on;
	root /opt/app/code;
}

跨站访问
Access-Control-Allow-Origin
location ~ .*\.(htm|html)$ {
	add_header Access-Controller-Allow-Origin http://www.jesonc.com;
	add_header Access-Controller-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;
	root /opt/app/code;
}


#vim /usr/local/nginx/conf/nginx.conf
log_format  access  '$remote_addr - $remote_user [$time_local] "$request" ' 
			'$status $body_bytes_sent "$http_referer" '
	        '"$http_user_agent" $http_x_forwarded_for '
	 		'"$upstream_addr" "$upstream_status" "$upstream_response_time" "$request_time"';
6	include /usr/local/nginx/conf/vhost/*.conf;
防盗链
http_refer
location ~ .*\.(jpg|gif|png)$ {
	gzip on;
	gzip_http_version 2;
	gzip_comp_level 2;
	gzip_types text/plain application/javascript application/x-javascript text/javascript image/png image/gif;
	
	valid_referers none blocked 116.62.103.228 ~/google\./;
	if ($valid_referers) {
		return 403;
	}

	root /opt/app/code/images;
}
测试
curl -e "http://www.baidu.com" -I http://172.16.1.137   // -e 指定从哪里访问的

代理功能（p）
	正向代理：代理的对象是客户端
	反向代理：代理的对象是服务端
location ~ /test_proxy.htm$ {
	proxy_pass http://127.0.0.1:8080;
}

netstat -luntp | grep nginx

location / {
	if ( $http_x_forwarded_for !~* "^116\.62\.103\.225") {
		return 403;
	}
	root /opt/app/code;
	index index.html index.htm;
}
================================
resolver 8.8.8.8;#指定DNS
location / {
	proxy_pass http://$http_host$request_uri;
}
================================

缓冲区
跳转重定向
头信息
超时

location / {
	proxy_pass http://127.0.0.1:8080;
	proxy_redirect default;

	proxy_set_header Host $http_host;
	proxy_set_header X-Real-IP $remote_addr;

	proxy_connect_timeout 30;
	proxy_send_timeout 60;
	proxy_read_timeout 60;

	proxy_buffer_size 32k;	#缓冲区大小
	proxy_buffering on;
	proxy_buffers 4 128k;
	proxy_busy_buffers_size 256k;
	proxy_max_temp_file_size 256k;
}

Nginx负载均衡
GSLB全局负载均衡
SLB
iptables -I INPUT -p tcp --dport 8002 -j DROP
iptables -F
upstream backend {
	ip_hash;
	server backend1.example.com  weight=5;
	server backend2.example.com:8080;
	server unix:/tmpp/backend3;

	server backup1.example.com:8080 backup;  #预留的备份服务器
	server backup2.example.com:8080 backup;
	server backup3.example.com:8080 max_fails 3 fail_timeout 60;
}
down 当前的server暂时不参与负载均衡
backup 预留的备份服务器
max_fails 运行请求失败的次数
fail_timeout 经过多少次失败后，服务暂停的时间
max_conns 限制最大的接收连接数

调度算法

轮询  按时间顺序分配
加权轮询
ip_hash 每个请求按访问IP的hash分配
least_conn  最少链接数，哪个机器连接数少就分发给哪个
url_hash   按照访问的URL的hash结果来分配请求，是每个URL定向到同一个后端服务器
hash关键数值  hash自定义的key
upstream backend {
	hash $request_uri;
	server 172.16.1.137:8001;
	server 172.16.1.137:8002;
	server 172.16.1.137:8003;
}

Nginx缓存服务器
proxy_cache配置语法
cache_test.conf

如何清理缓存文件
如何让部分页面不缓存



重定向
===============================
server {
	listen 80 default_server;
	server_name jeson.com;
	access_log /var/log/nginx/log/host.access.log  main;

	root /opt/app/code;
	location ~ ^/break {
		rewrite ^/break /test/ break;
	}

	location ~ ^/last {
		rewrite ^/last /test/ last;
		rewrite ^/last /test/ redirect;
	}

	location ~ ^/imooc {
		rewrite ^/imooc http://www.imooc.com/ permanent;
		rewrite ^/imooc http://www.imooc.com/ redirect;
	}

	location /test/ {
		default_type application/json;
		return 200 '{"status":"success"}';
	}

}
==============================
测试
curl -vL http://www.baidu.com/last

=======================================
server {
	listen 80;
	server_name localhost;
	root /opt/app/code;
	location / {
		rewrite ^/course-(\d+)-(\d+)-(\d)\.html$ /course/$1/$2/course_$3.html break;

		if ($http_user_agent ~* Chrome) {
			rewrite ^/nginx http://coding.imooc.com/class/121.html break;
		}

		if (!-f $request_filename) {
			rewrite ^/(.*)$ http://www.baidu.com/$1 redirect;
		}

		index index.html index.htm;
	}
}
============================================


Rewrite规则优先级
	server
	location
	指定location中的rewrite

server {
	listen 80;
	server_name www.nginx.org nginx.org;
	if ($http_host = nginx.org) {
		rewrite (.*) http://www.nginx.org/$1;
	}
}


server {
	listen 80;
	server_name www.nginx.org nginx.org;

	rewrite ^ http://www.nginx.org$request_uri?;

}
